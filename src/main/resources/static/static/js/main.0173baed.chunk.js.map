{"version":3,"sources":["securityUtils/setJWTToken.js","actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","actions/securityActions.js","components/Layout/Header.js","components/Project/Date.js","components/Project/ProjectForm.js","components/Project/AddProject.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/ProjectTaskForm.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","components/App.js","index.js"],"names":["setJWTToken","token","axios","defaults","headers","common","createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","post","push","type","payload","t0","response","data","stop","this","_x","apply","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","_this2","react_default","createElement","className","projectIdentifier","projectName","description","Link","to","concat","onClick","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","_context2","get","sent","_x2","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","bind","userIsNotAuthenticated","data-toggle","data-target","Date","title","name","value","onChange","ProjectForm","placeHolder","classnames","is-invalid","errors","placeholder","onSubmit","renderInput","Project_Date","startDate","endDate","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","setState","defineProperty","target","preventDefault","newProject","ProjectForm_ProjectForm","UpdateProject","match","params","getProject","nextProps","_nextProps$project","_ref3","_callee3","_context3","_x3","ProjectTask","onDeleteProjectTaskClick","backlogId","ptId","deleteProjectTask","priorityString","priorityClass","projectTask","priority","projectSequence","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","projectTasks","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","backlog","projectNotFound","role","ProjectBoard_Backlog","ProjectTaskForm","dueDate","AddProjectTask","newProjectTask","addProjectTask","ProjectTasks_ProjectTaskForm","UpdateProjectTask","updatedProjectTask","createAt","updateProjectTask","_this$props$match$par","getProjectTask","_nextProps$projectTas","patch","initialState","combineReducers","undefined","action","objectSpread","filter","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","reducers","compose","applyMiddleware","Landing","Register","newUser","username","password","confirmPassword","createNewUser","Login","loginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","decodedJWTToken","currentTime","now","exp","App","es","BrowserRouter","Layout_Header","exact","path","Switch","SecureRoute","ReactDOM","App_App","document","querySelector"],"mappings":"0SAUeA,EARK,SAAAC,GACdA,EACFC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAE1CC,IAAMC,SAASC,QAAQC,OAAvB,uDCFEC,EAAgB,SAACC,EAASC,GAAV,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAsB,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEzClB,IAAMmB,KAAK,eAAgBd,GAFc,OAG/CC,EAAQc,KAAK,cACbN,EAAS,CACPO,KCToB,aDUpBC,QAAS,KANoCN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAS/CF,EAAS,CACPO,KCdoB,aDepBC,QAASN,EAAAO,GAAIC,SAASC,OAXuB,yBAAAT,EAAAU,SAAAb,EAAAc,KAAA,YAAtB,gBAAAC,GAAA,OAAArB,EAAAsB,MAAAF,KAAAG,YAAA,IEEvBC,6MACJC,cAAgB,SAAAC,GACdC,EAAKC,MAAMC,cAAcH,4EAGlB,IAAAI,EAAAV,KACCtB,EAAYsB,KAAKQ,MAAjB9B,QACR,OACEiC,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,gCACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,OACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,SACbF,EAAA3B,EAAA4B,cAAA,QAAMC,UAAU,WAAWnC,EAAQoC,oBAErCH,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,2BACbF,EAAA3B,EAAA4B,cAAA,UAAKlC,EAAQqC,aACbJ,EAAA3B,EAAA4B,cAAA,SAAIlC,EAAQsC,cAEdL,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,8BACbF,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,cACZF,EAAA3B,EAAA4B,cAACK,EAAA,EAAD,CAAMC,GAAE,iBAAAC,OAAmBzC,EAAQoC,oBACjCH,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,yBACZF,EAAA3B,EAAA4B,cAAA,KAAGC,UAAU,6BAAb,qBAGJF,EAAA3B,EAAA4B,cAACK,EAAA,EAAD,CAAMC,GAAE,kBAAAC,OAAoBzC,EAAQoC,oBAClCH,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,0BACZF,EAAA3B,EAAA4B,cAAA,KAAGC,UAAU,mBAAb,0BAGJF,EAAA3B,EAAA4B,cAAA,MACEC,UAAU,yBACVO,QAAS,WACPV,EAAKL,cAAL,GAAAc,OAAsBzC,EAAQoC,sBAGhCH,EAAA3B,EAAA4B,cAAA,KAAGC,UAAU,2BAAb,gCApCQQ,aAmDXC,cACb,KACA,CAAEb,cFnByB,SAAAH,GAAE,sBAAAiB,EAAA1C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAuC,EAAMrC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,WAC7BmC,OAAOC,QAAQ,iDADc,CAAAF,EAAAlC,KAAA,eAAAkC,EAAAlC,KAAA,EAEzBlB,IAAMuD,OAAN,gBAAAT,OAA6Bb,IAFJ,OAI/BnB,EAAS,CACPO,KC1CwB,iBD2CxBC,QAASW,IANoB,wBAAAmB,EAAA1B,SAAAyB,EAAAxB,SAAJ,gBAAA6B,GAAA,OAAAN,EAAArB,MAAAF,KAAAG,YAAA,KEiBhBmB,CAGblB,GC/Ca0B,EAVa,WAC1B,OACEnB,EAAA3B,EAAA4B,cAACD,EAAA3B,EAAM+C,SAAP,KACEpB,EAAA3B,EAAA4B,cAACK,EAAA,EAAD,CAAMC,GAAG,cAAcL,UAAU,uBAAjC,sBCEAmB,8LAEFhC,KAAKQ,MAAMyB,+CAGJ,IACCC,EAAalC,KAAKQ,MAAM9B,QAAxBwD,SACR,OACEvB,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,YACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,OACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACbF,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,yBAAd,YACAF,EAAA3B,EAAA4B,cAAA,WACAD,EAAA3B,EAAA4B,cAACuB,EAAD,MACAxB,EAAA3B,EAAA4B,cAAA,WACAD,EAAA3B,EAAA4B,cAAA,WACCsB,EAASE,IAAI,SAAA1D,GACZ,OAAOiC,EAAA3B,EAAA4B,cAACyB,EAAD,CAAaC,IAAK5D,EAAQ4B,GAAI5B,QAASA,iBAlBtC2C,aAuCTC,cANS,SAAAiB,GACtB,MAAO,CACL7D,QAAS6D,EAAM7D,UAMjB,CAAEuD,YJ7BuB,iCAAAO,EAAA3D,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAM,SAAAwD,EAAMtD,GAAN,IAAAU,EAAA,OAAAd,EAAAC,EAAAI,KAAA,SAAAsD,GAAA,cAAAA,EAAApD,KAAAoD,EAAAnD,MAAA,cAAAmD,EAAAnD,KAAA,EACRlB,IAAMsE,IAAI,oBADF,OACzB9C,EADyB6C,EAAAE,KAE/BzD,EAAS,CACPO,KCtBwB,eDuBxBC,QAASE,EAASC,OAJW,wBAAA4C,EAAA3C,SAAA0C,EAAAzC,SAAN,gBAAA6C,GAAA,OAAAL,EAAAtC,MAAAF,KAAAG,YAAA,KI2BZmB,CAGbU,GCJWc,EAAS,kBAAM,SAAA3D,GAC1B4D,aAAaC,WAAW,YACxB7E,GAAY,GACZgB,EAAS,CACPO,KJvC4B,mBIwC5BC,QAAS,OC7CPsD,6MACJH,OAAS,WACPvC,EAAKC,MAAMsC,SACXpB,OAAOwB,SAASC,KAAO,6EAGhB,IAkDHC,EAlDGC,EACsBrD,KAAKQ,MAAM8C,SAAhCC,EADDF,EACCE,WAAYC,EADbH,EACaG,KAEdC,EACJ9C,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,2BAA2BP,GAAG,cAC3CK,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,sBACZF,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,YACZF,EAAA3B,EAAA4B,cAACK,EAAA,EAAD,CAAMJ,UAAU,WAAWK,GAAG,cAA9B,eAMJP,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,sBACZF,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,YACZF,EAAA3B,EAAA4B,cAACK,EAAA,EAAD,CAAMJ,UAAU,WAAWK,GAAG,cAC5BP,EAAA3B,EAAA4B,cAAA,KAAGC,UAAU,2BACZ2C,EAAKE,WAGV/C,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,YACZF,EAAA3B,EAAA4B,cAACK,EAAA,EAAD,CACEJ,UAAU,WACVK,GAAG,UACHE,QAASpB,KAAK8C,OAAOa,KAAK3D,OAH5B,aAYF4D,EACJjD,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,2BAA2BP,GAAG,cAC3CK,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,sBACZF,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,YACZF,EAAA3B,EAAA4B,cAACK,EAAA,EAAD,CAAMJ,UAAU,WAAWK,GAAG,aAA9B,YAIFP,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,YACZF,EAAA3B,EAAA4B,cAACK,EAAA,EAAD,CAAMJ,UAAU,WAAWK,GAAG,UAA9B,YAeR,OALEkC,EADEG,GAAcC,EACFC,EAEAG,EAIdjD,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,uDACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACbF,EAAA3B,EAAA4B,cAACK,EAAA,EAAD,CAAMC,GAAG,GAAGL,UAAU,gBAAtB,oCAGAF,EAAA3B,EAAA4B,cAAA,UACEC,UAAU,iBACVnB,KAAK,SACLmE,cAAY,WACZC,cAAY,eAEZnD,EAAA3B,EAAA4B,cAAA,QAAMC,UAAU,yBAEjBuC,WA7EU/B,aA6FNC,cAJS,SAAAiB,GAAK,MAAK,CAChCe,SAAUf,EAAMe,WAKhB,CAAER,UAFWxB,CAGb2B,4BCnFac,EAjBF,SAAAvD,GACX,OACEG,EAAA3B,EAAA4B,cAAA,WACED,EAAA3B,EAAA4B,cAAA,UAAKJ,EAAMwD,OACXrD,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,cACbF,EAAA3B,EAAA4B,cAAA,SACElB,KAAK,OACLmB,UAAU,+BACVoD,KAAMzD,EAAMyD,KACZC,MAAO1D,EAAM0D,MACbC,SAAU3D,EAAM2D,cCPLC,sLACP1E,EAAM2E,EAAaJ,GAC7B,OACEtD,EAAA3B,EAAA4B,cAAA,SACElB,KAAMA,EACNmB,UAAWyD,IAAW,+BAAgC,CACpDC,aAAcvE,KAAKQ,MAAMgE,OAAOP,KAElCQ,YAAaJ,EACbJ,KAAMA,EACNC,MAAOlE,KAAKQ,MAAMyD,GAClBE,SAAUnE,KAAKQ,MAAM2D,4CAMzB,OACExD,EAAA3B,EAAA4B,cAAA,WACED,EAAA3B,EAAA4B,cAAA,QAAM8D,SAAU1E,KAAKQ,MAAMkE,UACzB/D,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,cACZb,KAAK2E,YAAY,OAAQ,eAAgB,eACzC3E,KAAKQ,MAAMgE,OAAOzD,aACjBJ,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,oBACZb,KAAKQ,MAAMgE,OAAOzD,cAIzBJ,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,cACZb,KAAK2E,YAAY,OAAQ,oBAAqB,qBAC9C3E,KAAKQ,MAAMgE,OAAO1D,mBACjBH,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,oBACZb,KAAKQ,MAAMgE,OAAO1D,oBAOzBH,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,cACbF,EAAA3B,EAAA4B,cAAA,YACEC,UAAWyD,IAAW,+BAAgC,CACpDC,aAAcvE,KAAKQ,MAAMgE,OAAOxD,cAElCyD,YAAY,sBACZR,KAAK,cACLC,MAAOlE,KAAKQ,MAAMQ,YAClBmD,SAAUnE,KAAKQ,MAAM2D,WAEtBnE,KAAKQ,MAAMgE,OAAOxD,aACjBL,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,oBACZb,KAAKQ,MAAMgE,OAAOxD,cAIzBL,EAAA3B,EAAA4B,cAACgE,EAAD,CACEZ,MAAM,aACNC,KAAK,YACLC,MAAOlE,KAAKQ,MAAMqE,WAAa,GAC/BV,SAAUnE,KAAKQ,MAAM2D,WAEvBxD,EAAA3B,EAAA4B,cAACgE,EAAD,CACEZ,MAAM,qBACNC,KAAK,UACLC,MAAOlE,KAAKQ,MAAMsE,SAAW,GAC7BX,SAAUnE,KAAKQ,MAAM2D,WAEvBxD,EAAA3B,EAAA4B,cAAA,SAAOlB,KAAK,SAASmB,UAAU,4CAnEAQ,aCEnC0D,cACJ,SAAAA,IAAc,IAAAxE,EAAA,OAAA1B,OAAAmG,EAAA,EAAAnG,CAAAmB,KAAA+E,IACZxE,EAAA1B,OAAAoG,EAAA,EAAApG,CAAAmB,KAAAnB,OAAAqG,EAAA,EAAArG,CAAAkG,GAAAI,KAAAnF,QAWFmE,SAAW,SAAAiB,GACT7E,EAAK8E,SAALxG,OAAAyG,EAAA,EAAAzG,CAAA,GAAiBuG,EAAEG,OAAOtB,KAAOmB,EAAEG,OAAOrB,SAb9B3D,EAgBdmE,SAAW,SAAAU,GACTA,EAAEI,iBACF,IAAMC,EAAa,CACjB1E,YAAaR,EAAKgC,MAAMxB,YACxBD,kBAAmBP,EAAKgC,MAAMzB,kBAC9BE,YAAaT,EAAKgC,MAAMvB,YACxB6D,UAAWtE,EAAKgC,MAAMsC,UACtBC,QAASvE,EAAKgC,MAAMuC,SAEtBvE,EAAKC,MAAM/B,cAAcgH,EAAYlF,EAAKC,MAAM7B,UAtBhD4B,EAAKgC,MAAQ,CACXxB,YAAa,GACbD,kBAAmB,GACnBE,YAAa,GACb6D,UAAW,GACXC,QAAS,IARCvE,wEA6BZ,OACEI,EAAA3B,EAAA4B,cAAA,WACED,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,WACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,OACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,mBACbF,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,yBAAd,uBACAF,EAAA3B,EAAA4B,cAAA,WACAD,EAAA3B,EAAA4B,cAAC8E,EAAD,CACEvB,SAAUnE,KAAKmE,SACfO,SAAU1E,KAAK0E,SACfF,OAAQxE,KAAKQ,MAAMgE,OACnBzD,YAAaf,KAAKuC,MAAMxB,YACxBD,kBAAmBd,KAAKuC,MAAMzB,kBAC9BE,YAAahB,KAAKuC,MAAMvB,YACxB6D,UAAW7E,KAAKuC,MAAMsC,UACtBC,QAAS9E,KAAKuC,MAAMuC,sBA9CbzD,aAoEVC,cANS,SAAAiB,GACtB,MAAO,CACLiC,OAAQjC,EAAMiC,SAMhB,CAAE/F,iBAFW6C,CAGbyD,GCvEIY,cACJ,SAAAA,IAAc,IAAApF,EAAA,OAAA1B,OAAAmG,EAAA,EAAAnG,CAAAmB,KAAA2F,IACZpF,EAAA1B,OAAAoG,EAAA,EAAApG,CAAAmB,KAAAnB,OAAAqG,EAAA,EAAArG,CAAA8G,GAAAR,KAAAnF,QAqCFmE,SAAW,SAAAiB,GACT7E,EAAK8E,SAALxG,OAAAyG,EAAA,EAAAzG,CAAA,GAAiBuG,EAAEG,OAAOtB,KAAOmB,EAAEG,OAAOrB,SAvC9B3D,EA0CdmE,SAAW,SAAAU,GACTA,EAAEI,iBACF,IAAMC,EAAa,CACjBnF,GAAIC,EAAKgC,MAAMjC,GACfS,YAAaR,EAAKgC,MAAMxB,YACxBD,kBAAmBP,EAAKgC,MAAMzB,kBAC9BE,YAAaT,EAAKgC,MAAMvB,YACxB6D,UAAWtE,EAAKgC,MAAMsC,UACtBC,QAASvE,EAAKgC,MAAMuC,SAEtBvE,EAAKC,MAAM/B,cAAcgH,EAAYlF,EAAKC,MAAM7B,UAjDhD4B,EAAKgC,MAAQ,CACXjC,GAAI,GACJS,YAAa,GACbD,kBAAmB,GACnBE,YAAa,GACb6D,UAAW,GACXC,QAAS,IATCvE,mFAaM,IACVD,EAAON,KAAKQ,MAAMoF,MAAMC,OAAxBvF,GACRN,KAAKQ,MAAMsF,WAAWxF,EAAIN,KAAKQ,MAAM7B,2DAGboH,GAAW,IAAAC,EAQ/BD,EAAUrH,QANZ4B,EAFiC0F,EAEjC1F,GACAS,EAHiCiF,EAGjCjF,YACAD,EAJiCkF,EAIjClF,kBACAE,EALiCgF,EAKjChF,YACA6D,EANiCmB,EAMjCnB,UACAC,EAPiCkB,EAOjClB,QAGF9E,KAAKqF,SAAS,CACZ/E,KACAS,cACAD,oBACAE,cACA6D,YACAC,6CAsBF,OACEnE,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,WACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,OACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,mBACbF,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,yBAAd,uBACAF,EAAA3B,EAAA4B,cAAA,WACAD,EAAA3B,EAAA4B,cAAC8E,EAAD,CACEvB,SAAUnE,KAAKmE,SACfO,SAAU1E,KAAK0E,SACfF,OAAQxE,KAAKQ,MAAMgE,OACnBzD,YAAaf,KAAKuC,MAAMxB,YACxBD,kBAAmBd,KAAKuC,MAAMzB,kBAC9BE,YAAahB,KAAKuC,MAAMvB,YACxB6D,UAAW7E,KAAKuC,MAAMsC,UACtBC,QAAS9E,KAAKuC,MAAMuC,qBAxERzD,aA+FbC,cAPS,SAAAiB,GACtB,MAAO,CACLiC,OAAQjC,EAAMiC,OACd9F,QAAS6D,EAAM7D,QAAQA,UAMzB,CAAEoH,WV5EsB,SAACxF,EAAI3B,GAAL,sBAAAsH,EAAApH,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAiB,SAAAiH,EAAM/G,GAAN,IAAAU,EAAA,OAAAd,EAAAC,EAAAI,KAAA,SAAA+G,GAAA,cAAAA,EAAA7G,KAAA6G,EAAA5G,MAAA,cAAA4G,EAAA7G,KAAA,EAAA6G,EAAA5G,KAAA,EAEhBlB,IAAMsE,IAAN,gBAAAxB,OAA0Bb,IAFV,OAEjCT,EAFiCsG,EAAAvD,KAGvCzD,EAAS,CACPO,KC9BqB,cD+BrBC,QAASE,EAASC,OALmBqG,EAAA5G,KAAA,gBAAA4G,EAAA7G,KAAA,EAAA6G,EAAAvG,GAAAuG,EAAA,SAQvCxH,EAAQc,KAAK,cAR0B,yBAAA0G,EAAApG,SAAAmG,EAAAlG,KAAA,YAAjB,gBAAAoG,GAAA,OAAAH,EAAA/F,MAAAF,KAAAG,YAAA,IU4EV1B,iBAFD6C,CAGbqE,GCnGIU,6MACJC,yBAA2B,SAACC,EAAWC,GACrCjG,EAAKC,MAAMiG,kBAAkBF,EAAWC,4EAGjC,IAEHE,EACAC,EAHGjG,EAAAV,KACC4G,EAAgB5G,KAAKQ,MAArBoG,YAcR,OAV6B,IAAzBA,EAAYC,UACdF,EAAgB,uBAChBD,EAAiB,QACiB,IAAzBE,EAAYC,UACrBF,EAAgB,wBAChBD,EAAiB,WAEjBC,EAAgB,qBAChBD,EAAiB,OAGjB/F,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,sBACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAS,4BAAAM,OAA8BwF,IAA5C,OACOC,EAAYE,gBADnB,iBACkDJ,GAElD/F,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,sBACbF,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,cAAc+F,EAAYG,SACxCpG,EAAA3B,EAAA4B,cAAA,KAAGC,UAAU,4BACV+F,EAAYI,oBAEfrG,EAAA3B,EAAA4B,cAACK,EAAA,EAAD,CACEC,GAAE,sBAAAC,OAAwByF,EAAY9F,kBAApC,KAAAK,OACAyF,EAAYE,iBAEdjG,UAAU,mBAJZ,iBASAF,EAAA3B,EAAA4B,cAAA,UACEC,UAAU,sBACVO,QAAS,kBACPV,EAAK4F,yBAAL,GAAAnF,OACKyF,EAAY9F,mBADjB,GAAAK,OAEKyF,EAAYE,oBALrB,mBAvCgBzF,aA4DXC,cACb,KACA,CAAEmF,kBCQ6B,SAACF,EAAWC,GAAZ,sBAAAS,EAAApI,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAqB,SAAAiI,EAAM/H,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAA+H,GAAA,cAAAA,EAAA7H,KAAA6H,EAAA5H,MAAA,WAChDmC,OAAOC,QAAP,gDAAAR,OAA+DqF,EAA/D,MADgD,CAAAW,EAAA5H,KAAA,eAAA4H,EAAA5H,KAAA,EAE5ClB,IAAMuD,OAAN,gBAAAT,OAA6BoF,EAA7B,KAAApF,OAA0CqF,IAFE,OAGlDrH,EAAS,CACPO,KXxE6B,sBWyE7BC,QAAS6G,IALuC,wBAAAW,EAAApH,SAAAmH,EAAAlH,SAArB,gBAAAoH,GAAA,OAAAH,EAAA/G,MAAAF,KAAAG,YAAA,KDVlBmB,CAGb+E,GEVagB,mLA5CX,IAXO,IAGDC,EAFmBtH,KAAKQ,MAAtB+G,aAEmBnF,IAAI,SAAAwE,GAAW,OACxCjG,EAAA3B,EAAA4B,cAAC4G,EAAD,CAAalF,IAAKsE,EAAYtG,GAAIsG,YAAaA,MAG7Ca,EAAY,GACZC,EAAkB,GAClBC,EAAY,GAEPC,EAAI,EAAGA,EAAIN,EAAMO,OAAQD,IAAK,CACrC,IAAIE,EAASR,EAAMM,GAAGpH,MAAMoG,YAAYkB,OACzB,UAAXA,EACFL,EAAUhI,KAAK6H,EAAMM,IACD,gBAAXE,EACTJ,EAAgBjI,KAAK6H,EAAMM,IAE3BD,EAAUlI,KAAK6H,EAAMM,IAIzB,OACEjH,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,OACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,YACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,yBACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,uCACbF,EAAA3B,EAAA4B,cAAA,qBAGH6G,GAEH9G,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,YACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,yBACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,qCACbF,EAAA3B,EAAA4B,cAAA,2BAGH8G,GAEH/G,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,YACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,yBACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,qCACbF,EAAA3B,EAAA4B,cAAA,oBAGH+G,YAhDStG,aCIhB0G,8LAGgB,IACVzH,EAAON,KAAKQ,MAAMoF,MAAMC,OAAxBvF,GACRN,KAAKQ,MAAMwH,WAAW1H,oCAGf,IACCA,EAAON,KAAKQ,MAAMoF,MAAMC,OAAxBvF,GACAiH,EAAiBvH,KAAKQ,MAAMyH,QAA5BV,aACA/C,EAAWxE,KAAKQ,MAAhBgE,OA4BR,OACE7D,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACbF,EAAA3B,EAAA4B,cAACK,EAAA,EAAD,CAAMC,GAAE,mBAAAC,OAAqBb,GAAMO,UAAU,wBAC3CF,EAAA3B,EAAA4B,cAAA,KAAGC,UAAU,qBAAb,wBAEFF,EAAA3B,EAAA4B,cAAA,WACAD,EAAA3B,EAAA4B,cAAA,WA/BE2G,EAAaM,OAAS,EACpBrD,EAAO0D,gBAEPvH,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,iCAAiCsH,KAAK,SAClD3D,EAAO0D,iBAGH1D,EAAO1D,kBAEdH,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,iCAAiCsH,KAAK,SAClD3D,EAAO1D,mBAKVH,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,+BAA+BsH,KAAK,SAAnD,kCAMGxH,EAAA3B,EAAA4B,cAACwH,EAAD,CAASb,aAAcA,YAnCXlG,aA+DZC,cALS,SAAAiB,GAAK,MAAK,CAChC0F,QAAS1F,EAAM0F,QACfzD,OAAQjC,EAAMiC,SAKd,CAAEwD,WF5CsB,SAAAzB,GAAS,sBAAA/D,EAAA3D,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAwD,EAAMtD,GAAN,IAAAU,EAAA,OAAAd,EAAAC,EAAAI,KAAA,SAAAsD,GAAA,cAAAA,EAAApD,KAAAoD,EAAAnD,MAAA,cAAAmD,EAAApD,KAAA,EAAAoD,EAAAnD,KAAA,EAEZlB,IAAMsE,IAAN,gBAAAxB,OAA0BoF,IAFd,OAE7B1G,EAF6B6C,EAAAE,KAGnCzD,EAAS,CACPO,KX1BqB,cW2BrBC,QAASE,EAASC,OALe4C,EAAAnD,KAAA,gBAAAmD,EAAApD,KAAA,EAAAoD,EAAA9C,GAAA8C,EAAA,SAQnCvD,EAAS,CACPO,KXrCoB,aWsCpBC,QAAS+C,EAAA9C,GAAIC,SAASC,OAVW,yBAAA4C,EAAA3C,SAAA0C,EAAAzC,KAAA,YAAJ,gBAAA6C,GAAA,OAAAL,EAAAtC,MAAAF,KAAAG,YAAA,KE0CpBmB,CAGbyG,GCIaM,mLAtEX,OACE1H,EAAA3B,EAAA4B,cAAA,WACED,EAAA3B,EAAA4B,cAAA,QAAM8D,SAAU1E,KAAKQ,MAAMkE,UACzB/D,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,cACbF,EAAA3B,EAAA4B,cAAA,SACElB,KAAK,OACLmB,UAAWyD,IAAW,+BAAgC,CACpDC,aAAcvE,KAAKQ,MAAMgE,OAAOuC,UAElC9C,KAAK,UACLQ,YAAY,uBACZP,MAAOlE,KAAKQ,MAAMuG,QAClB5C,SAAUnE,KAAKQ,MAAM2D,WAEtBnE,KAAKQ,MAAMgE,OAAOuC,SACjBpG,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,oBACZb,KAAKQ,MAAMgE,OAAOuC,UAIzBpG,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,cACbF,EAAA3B,EAAA4B,cAAA,YACEC,UAAU,+BACV4D,YAAY,sBACZR,KAAK,qBACLC,MAAOlE,KAAKQ,MAAMwG,mBAClB7C,SAAUnE,KAAKQ,MAAM2D,YAGzBxD,EAAA3B,EAAA4B,cAACgE,EAAD,CACEZ,MAAM,WACNC,KAAK,UACLC,MAAOlE,KAAKQ,MAAM8H,SAAW,GAC7BnE,SAAUnE,KAAKQ,MAAM2D,WAEvBxD,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,cACbF,EAAA3B,EAAA4B,cAAA,UACEC,UAAU,+BACVoD,KAAK,WACLC,MAAOlE,KAAKQ,MAAMqG,SAClB1C,SAAUnE,KAAKQ,MAAM2D,UAErBxD,EAAA3B,EAAA4B,cAAA,UAAQsD,MAAO,GAAf,mBACAvD,EAAA3B,EAAA4B,cAAA,UAAQsD,MAAO,GAAf,QACAvD,EAAA3B,EAAA4B,cAAA,UAAQsD,MAAO,GAAf,UACAvD,EAAA3B,EAAA4B,cAAA,UAAQsD,MAAO,GAAf,SAIJvD,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,cACbF,EAAA3B,EAAA4B,cAAA,UACEC,UAAU,+BACVoD,KAAK,SACLC,MAAOlE,KAAKQ,MAAMsH,OAClB3D,SAAUnE,KAAKQ,MAAM2D,UAErBxD,EAAA3B,EAAA4B,cAAA,UAAQsD,MAAM,IAAd,iBACAvD,EAAA3B,EAAA4B,cAAA,UAAQsD,MAAM,SAAd,SACAvD,EAAA3B,EAAA4B,cAAA,UAAQsD,MAAM,eAAd,eACAvD,EAAA3B,EAAA4B,cAAA,UAAQsD,MAAM,QAAd,UAIJvD,EAAA3B,EAAA4B,cAAA,SAAOlB,KAAK,SAASmB,UAAU,4CAjEXQ,aCGxBkH,cACJ,SAAAA,EAAY/H,GAAO,IAAAD,EAAA1B,OAAAmG,EAAA,EAAAnG,CAAAmB,KAAAuI,IACjBhI,EAAA1B,OAAAoG,EAAA,EAAApG,CAAAmB,KAAAnB,OAAAqG,EAAA,EAAArG,CAAA0J,GAAApD,KAAAnF,KAAMQ,KAaR2D,SAAW,SAAAiB,GACT7E,EAAK8E,SAALxG,OAAAyG,EAAA,EAAAzG,CAAA,GAAiBuG,EAAEG,OAAOtB,KAAOmB,EAAEG,OAAOrB,SAfzB3D,EAkBnBmE,SAAW,SAAAU,GACTA,EAAEI,iBACF,IAAMgD,EAAiB,CACrBzB,QAASxG,EAAKgC,MAAMwE,QACpBC,mBAAoBzG,EAAKgC,MAAMyE,mBAC/Bc,OAAQvH,EAAKgC,MAAMuF,OACnBjB,SAAUtG,EAAKgC,MAAMsE,SACrByB,QAAS/H,EAAKgC,MAAM+F,QACpBxH,kBAAmBP,EAAKgC,MAAMzB,mBAEhCP,EAAKC,MAAMiI,eACTlI,EAAKgC,MAAMzB,kBACX0H,EACAjI,EAAKC,MAAM7B,UA/BI,IAET2B,EAAOC,EAAKC,MAAMoF,MAAMC,OAAxBvF,GAFS,OAIjBC,EAAKgC,MAAQ,CACXwE,QAAS,GACTC,mBAAoB,GACpBc,OAAQ,GACRjB,SAAU,EACVyB,QAAS,GACTxH,kBAAmBR,GAVJC,wEAmCV,IACCD,EAAON,KAAKQ,MAAMoF,MAAMC,OAAxBvF,GACR,OACEK,EAAA3B,EAAA4B,cAAA,WACED,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,WACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,OACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,mBACbF,EAAA3B,EAAA4B,cAACK,EAAA,EAAD,CAAMC,GAAE,iBAAAC,OAAmBb,GAAMO,UAAU,iBAA3C,yBAGAF,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,yBAAd,oBACAF,EAAA3B,EAAA4B,cAAA,KAAGC,UAAU,oBAAb,+BAEAF,EAAA3B,EAAA4B,cAAC8H,EAAD,CACEvE,SAAUnE,KAAKmE,SACfO,SAAU1E,KAAK0E,SACfF,OAAQxE,KAAKQ,MAAMgE,OACnBuC,QAAS/G,KAAKuC,MAAMwE,QACpBC,mBAAoBhH,KAAKuC,MAAMyE,mBAC/Bc,OAAQ9H,KAAKuC,MAAMuF,OACnBjB,SAAU7G,KAAKuC,MAAMsE,SACrByB,QAAStI,KAAKuC,MAAM+F,QACpBxH,kBAAmBd,KAAKuC,MAAMzB,gCA3DnBO,aA+EdC,cAJS,SAAAiB,GAAK,MAAK,CAChCiC,OAAQjC,EAAMiC,SAKd,CAAEiE,eJjF0B,SAC5BlC,EACAK,EACAjI,GAH4B,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAIzB,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEKlB,IAAMmB,KAAN,gBAAA2B,OAA2BoF,GAAaK,GAF7C,OAGDjI,EAAQc,KAAR,iBAAA0B,OAA8BoF,IAC9BpH,EAAS,CACPO,KXjBoB,aWkBpBC,QAAS,KANVN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SASDF,EAAS,CACPO,KXtBoB,aWuBpBC,QAASN,EAAAO,GAAIC,SAASC,OAXvB,yBAAAT,EAAAU,SAAAb,EAAAc,KAAA,YAJyB,gBAAAC,GAAA,OAAArB,EAAAsB,MAAAF,KAAAG,YAAA,KI+EfmB,CAGbiH,GClFII,cACJ,SAAAA,EAAYnI,GAAO,IAAAD,EAAA,OAAA1B,OAAAmG,EAAA,EAAAnG,CAAAmB,KAAA2I,IACjBpI,EAAA1B,OAAAoG,EAAA,EAAApG,CAAAmB,KAAAnB,OAAAqG,EAAA,EAAArG,CAAA8J,GAAAxD,KAAAnF,KAAMQ,KAeR2D,SAAW,SAAAiB,GACT7E,EAAK8E,SAALxG,OAAAyG,EAAA,EAAAzG,CAAA,GAAiBuG,EAAEG,OAAOtB,KAAOmB,EAAEG,OAAOrB,SAjBzB3D,EAoBnBmE,SAAW,SAAAU,GACTA,EAAEI,iBACF,IAAMoD,EAAqB,CACzBtI,GAAIC,EAAKgC,MAAMjC,GACfwG,gBAAiBvG,EAAKgC,MAAMuE,gBAC5BC,QAASxG,EAAKgC,MAAMwE,QACpBC,mBAAoBzG,EAAKgC,MAAMyE,mBAC/Bc,OAAQvH,EAAKgC,MAAMuF,OACnBjB,SAAUtG,EAAKgC,MAAMsE,SACrByB,QAAS/H,EAAKgC,MAAM+F,QACpBxH,kBAAmBP,EAAKgC,MAAMzB,kBAC9B+H,SAAUtI,EAAKgC,MAAMsG,UAEvBtI,EAAKC,MAAMsI,kBACTvI,EAAKgC,MAAMzB,kBACXP,EAAKgC,MAAMuE,gBACX8B,EACArI,EAAKC,MAAM7B,UAlCb4B,EAAKgC,MAAQ,CACXjC,GAAI,GACJwG,gBAAiB,GACjBC,QAAS,GACTC,mBAAoB,GACpBc,OAAQ,GACRjB,SAAU,GACVyB,QAAS,KACTxH,kBAAmB,GACnB+H,SAAU,IAZKtI,mFAyCC,IAAAwI,EACU/I,KAAKQ,MAAMoF,MAAMC,OAArCU,EADUwC,EACVxC,UAAWC,EADDuC,EACCvC,KACnBxG,KAAKQ,MAAMwI,eAAezC,EAAWC,EAAMxG,KAAKQ,MAAM7B,2DAG9BoH,GAAW,IAAAkD,EAW/BlD,EAAUa,YATZtG,EAFiC2I,EAEjC3I,GACAwG,EAHiCmC,EAGjCnC,gBACAC,EAJiCkC,EAIjClC,QACAC,EALiCiC,EAKjCjC,mBACAc,EANiCmB,EAMjCnB,OACAjB,EAPiCoC,EAOjCpC,SACAyB,EARiCW,EAQjCX,QACAxH,EATiCmI,EASjCnI,kBACA+H,EAViCI,EAUjCJ,SAGF7I,KAAKqF,SAAS,CACZ/E,KACAwG,kBACAC,UACAC,qBACAc,SACAjB,WACAyB,UACAxH,oBACA+H,8CAIK,IACCtC,EAAcvG,KAAKQ,MAAMoF,MAAMC,OAA/BU,UACR,OACE5F,EAAA3B,EAAA4B,cAAA,WACED,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,WACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,OACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,mBACbF,EAAA3B,EAAA4B,cAACK,EAAA,EAAD,CACEC,GAAE,iBAAAC,OAAmBoF,GACrB1F,UAAU,iBAFZ,yBAMAF,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,yBAAd,uBACAF,EAAA3B,EAAA4B,cAAA,KAAGC,UAAU,oBAAb,iBACiBb,KAAKuC,MAAMzB,kBAD5B,oBACgE,IAC7Dd,KAAKuC,MAAMuE,iBAGdnG,EAAA3B,EAAA4B,cAAC8H,EAAD,CACEvE,SAAUnE,KAAKmE,SACfO,SAAU1E,KAAK0E,SACfF,OAAQxE,KAAKQ,MAAMgE,OACnBuC,QAAS/G,KAAKuC,MAAMwE,QACpBC,mBAAoBhH,KAAKuC,MAAMyE,mBAC/Bc,OAAQ9H,KAAKuC,MAAMuF,OACnBjB,SAAU7G,KAAKuC,MAAMsE,SACrByB,QAAStI,KAAKuC,MAAM+F,QACpBxH,kBAAmBd,KAAKuC,MAAMzB,gCAtGhBO,aA4HjBC,cALS,SAAAiB,GAAK,MAAK,CAChCqE,YAAarE,EAAM0F,QAAQrB,YAC3BpC,OAAQjC,EAAMiC,SAKd,CAAEwE,eL3F0B,SAACzC,EAAWC,EAAM7H,GAAlB,sBAAAsH,EAAApH,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAA8B,SAAAiH,EAAM/G,GAAN,IAAAU,EAAA,OAAAd,EAAAC,EAAAI,KAAA,SAAA+G,GAAA,cAAAA,EAAA7G,KAAA6G,EAAA5G,MAAA,cAAA4G,EAAA7G,KAAA,EAAA6G,EAAA5G,KAAA,EAEjClB,IAAMsE,IAAN,gBAAAxB,OAA0BoF,EAA1B,KAAApF,OAAuCqF,IAFN,OAElD3G,EAFkDsG,EAAAvD,KAGxDzD,EAAS,CACPO,KXxC0B,mBWyC1BC,QAASE,EAASC,OALoCqG,EAAA5G,KAAA,gBAAA4G,EAAA7G,KAAA,EAAA6G,EAAAvG,GAAAuG,EAAA,SAQxDxH,EAAQc,KAAK,cAR2C,yBAAA0G,EAAApG,SAAAmG,EAAAlG,KAAA,YAA9B,gBAAAoG,GAAA,OAAAH,EAAA/F,MAAAF,KAAAG,YAAA,IK2FV2I,kBL/Ea,SAC/BvC,EACAC,EACAI,EACAjI,GAJ+B,sBAAA4C,EAAA1C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAK5B,SAAAuC,EAAMrC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cAAAkC,EAAAnC,KAAA,EAAAmC,EAAAlC,KAAA,EAEKlB,IAAM6K,MAAN,gBAAA/H,OAA4BoF,EAA5B,KAAApF,OAAyCqF,GAAQI,GAFtD,OAGDjI,EAAQc,KAAR,iBAAA0B,OAA8BoF,IAC9BpH,EAAS,CACPO,KXjEoB,aWkEpBC,QAAS,KANV8B,EAAAlC,KAAA,gBAAAkC,EAAAnC,KAAA,EAAAmC,EAAA7B,GAAA6B,EAAA,SASDtC,EAAS,CACPO,KXtEoB,aWuEpBC,QAAS8B,EAAA7B,GAAIC,SAASC,OAXvB,yBAAA2B,EAAA1B,SAAAyB,EAAAxB,KAAA,YAL4B,gBAAA6B,GAAA,OAAAN,EAAArB,MAAAF,KAAAG,YAAA,KK6ElBmB,CAGbqH,oBCrIIQ,GAAe,YCAfA,GAAe,CACnBjH,SAAU,GACVxD,QAAS,ICELyK,GAAe,CACnB5B,aAAc,GACdX,YAAa,ICNTuC,GAAe,CACnB3F,KAAM,GACND,YAAY,GCEC6F,eAAgB,CAC7B5E,OJHa,WAAkC,IAAjCjC,EAAiCpC,UAAA0H,OAAA,QAAAwB,IAAAlJ,UAAA,GAAAA,UAAA,GAAzBgJ,GAAcG,EAAWnJ,UAAA0H,OAAA,EAAA1H,UAAA,QAAAkJ,EAC/C,OAAQC,EAAO5J,MACb,IjBNsB,aiBOpB,OAAO4J,EAAO3J,QAEhB,QACE,OAAO4C,IIFX7D,QHDa,WAAkC,IAAjC6D,EAAiCpC,UAAA0H,OAAA,QAAAwB,IAAAlJ,UAAA,GAAAA,UAAA,GAAzBgJ,GAAcG,EAAWnJ,UAAA0H,OAAA,EAAA1H,UAAA,QAAAkJ,EAC/C,OAAQC,EAAO5J,MACb,IlBRwB,ekBStB,OAAOb,OAAA0K,GAAA,EAAA1K,CAAA,GACF0D,EADL,CAEEL,SAAUoH,EAAO3J,UAErB,IlBZuB,ckBarB,OAAOd,OAAA0K,GAAA,EAAA1K,CAAA,GACF0D,EADL,CAEE7D,QAAS4K,EAAO3J,UAEpB,IlBhB0B,iBkBiBxB,OAAOd,OAAA0K,GAAA,EAAA1K,CAAA,GACF0D,EADL,CAEEL,SAAUK,EAAML,SAASsH,OACvB,SAAA9K,GAAO,OAAIA,EAAQoC,oBAAsBwI,EAAO3J,YAGtD,QACE,OAAO4C,IGlBX0F,QFEa,WAAuC,IAA9B1F,EAA8BpC,UAAA0H,OAAA,QAAAwB,IAAAlJ,UAAA,GAAAA,UAAA,GAAtBgJ,GAAcG,EAAQnJ,UAAA0H,OAAA,EAAA1H,UAAA,QAAAkJ,EACpD,OAAQC,EAAO5J,MACb,InBPuB,cmBQrB,OAAOb,OAAA0K,GAAA,EAAA1K,CAAA,GACF0D,EADL,CAEEgF,aAAc+B,EAAO3J,UAEzB,InBX4B,mBmBY1B,OAAOd,OAAA0K,GAAA,EAAA1K,CAAA,GACF0D,EADL,CAEEqE,YAAa0C,EAAO3J,UAExB,InBf+B,sBmBgB7B,OAAOd,OAAA0K,GAAA,EAAA1K,CAAA,GACF0D,EADL,CAEEgF,aAAchF,EAAMgF,aAAaiC,OAC/B,SAAA5C,GAAW,OAAIA,EAAYE,kBAAoBwC,EAAO3J,YAI5D,QACE,OAAO4C,IEtBXe,SDKa,WAAuC,IARzB3D,EAQL4C,EAA8BpC,UAAA0H,OAAA,QAAAwB,IAAAlJ,UAAA,GAAAA,UAAA,GAAtBgJ,GAAcG,EAAQnJ,UAAA0H,OAAA,EAAA1H,UAAA,QAAAkJ,EACpD,OAAQC,EAAO5J,MACb,IpBN4B,mBoBO1B,OAAOb,OAAA0K,GAAA,EAAA1K,CAAA,GACF0D,EADL,CAEEgB,YAbqB5D,EAaY2J,EAAO3J,UAZ1CA,GAaE6D,KAAM8F,EAAO3J,UAEjB,QACE,OAAO4C,MEpBP4G,GAAe,GACfM,GAAa,CAACC,MAIdC,GACJjI,OAAOkI,8BAAgClI,OAAOkI,+BAmBjCC,GAjBXnI,OAAOoI,UAAUC,UAAUC,SAAS,WAAaL,GAC3CM,YACNC,GACAf,GACAgB,YACEC,IAAelK,WAAf,EAAmBuJ,IACnBE,KAIIM,YACNC,GACAf,GACAgB,YAAQC,IAAelK,WAAf,EAAmBuJ,MCpBzBY,+LAEErK,KAAKQ,MAAM8C,SAASC,YACtBvD,KAAKQ,MAAM7B,QAAQc,KAAK,+CAK1B,OACEkB,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,WACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,yCACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,OACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,yBACbF,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,kBAAd,wBACAF,EAAA3B,EAAA4B,cAAA,KAAGC,UAAU,QAAb,iEAGAF,EAAA3B,EAAA4B,cAAA,WACAD,EAAA3B,EAAA4B,cAACK,EAAA,EAAD,CAAMC,GAAG,YAAYL,UAAU,+BAA/B,WAGAF,EAAA3B,EAAA4B,cAACK,EAAA,EAAD,CAAMC,GAAG,SAASL,UAAU,iCAA5B,qBAtBMQ,aA0CPC,eAJS,SAAAiB,GAAK,MAAK,CAChCe,SAAUf,EAAMe,WAGHhC,CAAyB+I,ICzClCC,eACJ,SAAAA,IAAc,IAAA/J,EAAA,OAAA1B,OAAAmG,EAAA,EAAAnG,CAAAmB,KAAAsK,IACZ/J,EAAA1B,OAAAoG,EAAA,EAAApG,CAAAmB,KAAAnB,OAAAqG,EAAA,EAAArG,CAAAyL,GAAAnF,KAAAnF,QAUFmE,SAAW,SAAAiB,GACT7E,EAAK8E,SAALxG,OAAAyG,EAAA,EAAAzG,CAAA,GAAiBuG,EAAEG,OAAOtB,KAAOmB,EAAEG,OAAOrB,SAZ9B3D,EAedmE,SAAW,SAAAU,GACTA,EAAEI,iBACF,IAAM+E,EAAU,CACdC,SAAUjK,EAAKgC,MAAMiI,SACrB9G,SAAUnD,EAAKgC,MAAMmB,SACrB+G,SAAUlK,EAAKgC,MAAMkI,SACrBC,gBAAiBnK,EAAKgC,MAAMmI,iBAE9BnK,EAAKC,MAAMmK,cAAcJ,EAAShK,EAAKC,MAAM7B,UApB7C4B,EAAKgC,MAAQ,CACXiI,SAAU,GACV9G,SAAU,GACV+G,SAAU,GACVC,gBAAiB,IAPPnK,mFA2BRP,KAAKQ,MAAM8C,SAASC,YACtBvD,KAAKQ,MAAM7B,QAAQc,KAAK,+CAK1B,OACEkB,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,YACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,OACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,mBACbF,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,yBAAd,WACAF,EAAA3B,EAAA4B,cAAA,KAAGC,UAAU,oBAAb,uBACAF,EAAA3B,EAAA4B,cAAA,QAAM8D,SAAU1E,KAAK0E,UACnB/D,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,cACbF,EAAA3B,EAAA4B,cAAA,SACElB,KAAK,OACLmB,UAAWyD,IAAW,+BAAgC,CACpDC,aAAcvE,KAAKQ,MAAMgE,OAAOd,WAElCe,YAAY,OACZR,KAAK,WACLC,MAAOlE,KAAKuC,MAAMmB,SAClBS,SAAUnE,KAAKmE,WAEhBnE,KAAKQ,MAAMgE,OAAOd,UACjB/C,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,oBACZb,KAAKQ,MAAMgE,OAAOd,WAIzB/C,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,cACbF,EAAA3B,EAAA4B,cAAA,SACElB,KAAK,OACLmB,UAAWyD,IAAW,+BAAgC,CACpDC,aAAcvE,KAAKQ,MAAMgE,OAAOgG,WAElC/F,YAAY,2BACZR,KAAK,WACLC,MAAOlE,KAAKuC,MAAMiI,SAClBrG,SAAUnE,KAAKmE,WAEhBnE,KAAKQ,MAAMgE,OAAOd,UACjB/C,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,oBACZb,KAAKQ,MAAMgE,OAAOgG,WAIzB7J,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,cACbF,EAAA3B,EAAA4B,cAAA,SACElB,KAAK,WACLmB,UAAWyD,IAAW,+BAAgC,CACpDC,aAAcvE,KAAKQ,MAAMgE,OAAOiG,WAElChG,YAAY,WACZR,KAAK,WACLE,SAAUnE,KAAKmE,SACfD,MAAOlE,KAAKuC,MAAM2B,QAEnBlE,KAAKQ,MAAMgE,OAAOd,UACjB/C,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,oBACZb,KAAKQ,MAAMgE,OAAOiG,WAIzB9J,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,cACbF,EAAA3B,EAAA4B,cAAA,SACElB,KAAK,WACLmB,UAAWyD,IAAW,+BAAgC,CACpDC,aAAcvE,KAAKQ,MAAMgE,OAAOkG,kBAElCjG,YAAY,mBACZR,KAAK,kBACLE,SAAUnE,KAAKmE,SACfD,MAAOlE,KAAKuC,MAAMmI,kBAEnB1K,KAAKQ,MAAMgE,OAAOd,UACjB/C,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,oBACZb,KAAKQ,MAAMgE,OAAOkG,kBAIzB/J,EAAA3B,EAAA4B,cAAA,SAAOlB,KAAK,SAASmB,UAAU,4CA9GxBQ,aAmIRC,eALS,SAAAiB,GAAK,MAAK,CAChCiC,OAAQjC,EAAMiC,OACdlB,SAAUf,EAAMe,WAKhB,CAAEqH,cpBtIyB,SAACJ,EAAS5L,GAAV,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAsB,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEzClB,IAAMmB,KAAK,sBAAuB+K,GAFO,OAG/C5L,EAAQc,KAAK,UACbN,EAAS,CACPO,KJVoB,aIWpBC,QAAS,KANoCN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAS/CF,EAAS,CACPO,KJfoB,aIgBpBC,QAASN,EAAAO,GAAMC,SAASC,OAXqB,yBAAAT,EAAAU,SAAAb,EAAAc,KAAA,YAAtB,gBAAAC,GAAA,OAAArB,EAAAsB,MAAAF,KAAAG,YAAA,KoBoIdmB,CAGbgJ,ICtIIM,eACJ,SAAAA,IAAc,IAAArK,EAAA,OAAA1B,OAAAmG,EAAA,EAAAnG,CAAAmB,KAAA4K,IACZrK,EAAA1B,OAAAoG,EAAA,EAAApG,CAAAmB,KAAAnB,OAAAqG,EAAA,EAAArG,CAAA+L,GAAAzF,KAAAnF,QAOF0E,SAAW,SAAAU,GACTA,EAAEI,iBACF,IAAMqF,EAAe,CACnBL,SAAUjK,EAAKgC,MAAMiI,SACrBC,SAAUlK,EAAKgC,MAAMkI,UAGvBlK,EAAKC,MAAMsK,MAAMD,IAfLtK,EAkBd4D,SAAW,SAAAiB,GACT7E,EAAK8E,SAALxG,OAAAyG,EAAA,EAAAzG,CAAA,GAAiBuG,EAAEG,OAAOtB,KAAOmB,EAAEG,OAAOrB,SAjB1C3D,EAAKgC,MAAQ,CACXiI,SAAU,GACVC,SAAU,IAJAlK,mFAuBRP,KAAKQ,MAAM8C,SAASC,YACtBvD,KAAKQ,MAAM7B,QAAQc,KAAK,gEAIFsG,GACpBA,EAAUzC,SAASC,YACrBvD,KAAKQ,MAAM7B,QAAQc,KAAK,+CAInB,IACC+E,EAAWxE,KAAKQ,MAAhBgE,OACR,OACE7D,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,SACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,OACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,mBACbF,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,yBAAd,UACAF,EAAA3B,EAAA4B,cAAA,QAAM8D,SAAU1E,KAAK0E,UACnB/D,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,cACbF,EAAA3B,EAAA4B,cAAA,SACElB,KAAK,OACLmB,UAAWyD,IAAW,+BAAgC,CACpDC,aAAcC,EAAOgG,WAEvB/F,YAAY,gBACZR,KAAK,WACLC,MAAOlE,KAAKuC,MAAMiI,SAClBrG,SAAUnE,KAAKmE,WAEhBK,EAAOgG,UACN7J,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,oBAAoB2D,EAAOgG,WAG9C7J,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,cACbF,EAAA3B,EAAA4B,cAAA,SACElB,KAAK,WACLmB,UAAWyD,IAAW,+BAAgC,CACpDC,aAAcC,EAAOiG,WAEvBhG,YAAY,WACZR,KAAK,WACLC,MAAOlE,KAAKuC,MAAMkI,SAClBtG,SAAUnE,KAAKmE,WAEhBK,EAAOiG,UACN9J,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,oBAAoB2D,EAAOiG,WAG9C9J,EAAA3B,EAAA4B,cAAA,SAAOlB,KAAK,SAASmB,UAAU,4CA1E3BQ,aA+FLC,eALS,SAAAiB,GAAK,MAAK,CAChCe,SAAUf,EAAMe,SAChBkB,OAAQjC,EAAMiC,SAKd,CAAEsG,MrBlFiB,SAAAD,GAAY,sBAAArI,EAAA3D,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAwD,EAAMtD,GAAN,IAAAU,EAAAzB,EAAA2M,EAAA,OAAAhM,EAAAC,EAAAI,KAAA,SAAAsD,GAAA,cAAAA,EAAApD,KAAAoD,EAAAnD,MAAA,cAAAmD,EAAApD,KAAA,EAAAoD,EAAAnD,KAAA,EAGVlB,IAAMmB,KAAK,mBAAoBqL,GAHrB,OAG3BhL,EAH2B6C,EAAAE,KAKzBxE,EAAUyB,EAASC,KAAnB1B,MAER2E,aAAaiI,QAAQ,WAAY5M,GAEjCD,EAAYC,GAEN2M,EAAUE,IAAW7M,GAE3Be,EAAS,CACPO,KJxB0B,mBIyB1BC,QAASoL,IAfsBrI,EAAAnD,KAAA,iBAAAmD,EAAApD,KAAA,GAAAoD,EAAA9C,GAAA8C,EAAA,SAkBjCvD,EAAS,CACPO,KJxCoB,aIyCpBC,QAAS+C,EAAA9C,GAAMC,SAASC,OApBO,yBAAA4C,EAAA3C,SAAA0C,EAAAzC,KAAA,aAAJ,gBAAA6C,GAAA,OAAAL,EAAAtC,MAAAF,KAAAG,YAAA,KqBgFlBmB,CAGbsJ,sBChFatJ,eAFS,SAAAiB,GAAK,MAAK,CAAEe,SAAUf,EAAMe,WAErChC,CAnBM,SAAA1C,GAAA,IAAcyC,EAAdzC,EAAGsM,UAAsB5H,EAAzB1E,EAAyB0E,SAAa6H,EAAtCtM,OAAAuM,GAAA,EAAAvM,CAAAD,EAAA,iCACnB+B,EAAA3B,EAAA4B,cAACyK,EAAA,EAADxM,OAAAyM,OAAA,GACMH,EADN,CAEEI,OAAQ,SAAA/K,GAAK,OACa,IAAxB8C,EAASC,WACP5C,EAAA3B,EAAA4B,cAACS,EAAcb,GAEfG,EAAA3B,EAAA4B,cAAC4K,GAAA,EAAD,CAAUtK,GAAG,gBCWfuK,GAAW1I,aAAa0I,SAE9B,GAAIA,GAAU,CACZtN,EAAYsN,IACZ,IAAMC,GAAkBT,IAAWQ,IACnC5B,GAAM1K,SAAS,CACbO,K3BlB4B,mB2BmB5BC,QAAS+L,KAGX,IAAMC,GAAc5H,KAAK6H,MAAQ,IAC7BF,GAAgBG,IAAMF,KACxB9B,GAAM1K,SAAS2D,KACfpB,OAAOwB,SAASC,KAAO,SAIN2I,oLAEjB,OACEnL,EAAA3B,EAAA4B,cAACmL,EAAA,EAAD,CAAUlC,MAAOA,IACflJ,EAAA3B,EAAA4B,cAACoL,EAAA,EAAD,KACErL,EAAA3B,EAAA4B,cAAA,WACED,EAAA3B,EAAA4B,cAACqL,EAAD,MAIAtL,EAAA3B,EAAA4B,cAACyK,EAAA,EAAD,CAAOa,OAAK,EAACC,KAAK,IAAIjB,UAAWb,KACjC1J,EAAA3B,EAAA4B,cAACyK,EAAA,EAAD,CAAOa,OAAK,EAACC,KAAK,YAAYjB,UAAWZ,KACzC3J,EAAA3B,EAAA4B,cAACyK,EAAA,EAAD,CAAOa,OAAK,EAACC,KAAK,SAASjB,UAAWN,KAItCjK,EAAA3B,EAAA4B,cAACwL,EAAA,EAAD,KACEzL,EAAA3B,EAAA4B,cAACyL,GAAD,CAAcH,OAAK,EAACC,KAAK,aAAajB,UAAWlJ,IACjDrB,EAAA3B,EAAA4B,cAACyL,GAAD,CAAcH,OAAK,EAACC,KAAK,cAAcjB,UAAWnG,IAClDpE,EAAA3B,EAAA4B,cAACyL,GAAD,CACEH,OAAK,EACLC,KAAK,qBACLjB,UAAWvF,IAEbhF,EAAA3B,EAAA4B,cAACyL,GAAD,CACEH,OAAK,EACLC,KAAK,oBACLjB,UAAWnD,IAEbpH,EAAA3B,EAAA4B,cAACyL,GAAD,CACEH,OAAK,EACLC,KAAK,sBACLjB,UAAW3C,IAEb5H,EAAA3B,EAAA4B,cAACyL,GAAD,CACEH,OAAK,EACLC,KAAK,sCACLjB,UAAWvC,eArCMtH,aCnCjCiL,IAASf,OAAO5K,EAAA3B,EAAA4B,cAAC2L,GAAD,MAASC,SAASC,cAAc","file":"static/js/main.0173baed.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECT, GET_PROJECTS, DELETE_PROJECT } from \"./types\";\n\n// Create\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const response = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: response.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const response = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: response.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (window.confirm(\"Are you sure you want to delete this project?\")) {\n    await axios.delete(`/api/project/${id}`);\n\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n// types for BACKLOG_ACTIONS\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\n// security\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={() => {\n                    this.onDeleteClick(`${project.projectIdentifier}`);\n                  }}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProject }\n)(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { getProjects } from \"../actions\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n              {projects.map(project => {\n                return <ProjectItem key={project.id} project={project} />;\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    project: state.project\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const login = loginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const response = await axios.post(\"/api/users/login\", loginRequest);\n    // extract the token from response data\n    const { token } = response.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout = () => {\n    this.props.logout();\n    window.location.href = \"/\";\n  };\n\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fa fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link to=\"\" className=\"navbar-brand\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);\n","import React from \"react\";\n\nconst Date = props => {\n  return (\n    <div>\n      <h6>{props.title}</h6>\n      <div className=\"form-group\">\n        <input\n          type=\"date\"\n          className=\"form-control form-control-lg\"\n          name={props.name}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Date;\n","import React, { Component } from \"react\";\n\nimport classnames from \"classnames\";\nimport Date from \"./Date\";\n\nexport default class ProjectForm extends Component {\n  renderInput(type, placeHolder, name) {\n    return (\n      <input\n        type={type}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": this.props.errors[name]\n        })}\n        placeholder={placeHolder}\n        name={name}\n        value={this.props[name]}\n        onChange={this.props.onChange}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.props.onSubmit}>\n          <div className=\"form-group\">\n            {this.renderInput(\"text\", \"Project Name\", \"projectName\")}\n            {this.props.errors.projectName && (\n              <div className=\"invalid-feedback\">\n                {this.props.errors.projectName}\n              </div>\n            )}\n          </div>\n          <div className=\"form-group\">\n            {this.renderInput(\"text\", \"Unique Project ID\", \"projectIdentifier\")}\n            {this.props.errors.projectIdentifier && (\n              <div className=\"invalid-feedback\">\n                {this.props.errors.projectIdentifier}\n              </div>\n            )}\n          </div>\n          {\n            // <!-- disabled for Edit Only!! remove \"disabled\" for the Create operation -->\n          }\n          <div className=\"form-group\">\n            <textarea\n              className={classnames(\"form-control form-control-lg\", {\n                \"is-invalid\": this.props.errors.description\n              })}\n              placeholder=\"Project Description\"\n              name=\"description\"\n              value={this.props.description}\n              onChange={this.props.onChange}\n            />\n            {this.props.errors.description && (\n              <div className=\"invalid-feedback\">\n                {this.props.errors.description}\n              </div>\n            )}\n          </div>\n          <Date\n            title=\"Start Date\"\n            name=\"startDate\"\n            value={this.props.startDate || \"\"}\n            onChange={this.props.onChange}\n          />\n          <Date\n            title=\"Estimated End Date\"\n            name=\"endDate\"\n            value={this.props.endDate || \"\"}\n            onChange={this.props.onChange}\n          />\n          <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport ProjectForm from \"./ProjectForm\";\nimport { createProject } from \"../../actions\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\"\n    };\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n    this.props.createProject(newProject, this.props.history);\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <ProjectForm\n                  onChange={this.onChange}\n                  onSubmit={this.onSubmit}\n                  errors={this.props.errors}\n                  projectName={this.state.projectName}\n                  projectIdentifier={this.state.projectIdentifier}\n                  description={this.state.description}\n                  startDate={this.state.startDate}\n                  endDate={this.state.endDate}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    errors: state.errors\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(AddProject);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { getProject, createProject } from \"../../actions\";\nimport ProjectForm from \"./ProjectForm\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      startDate,\n      endDate\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      startDate,\n      endDate\n    });\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const newProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n    this.props.createProject(newProject, this.props.history);\n  };\n\n  render() {\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <ProjectForm\n                onChange={this.onChange}\n                onSubmit={this.onSubmit}\n                errors={this.props.errors}\n                projectName={this.state.projectName}\n                projectIdentifier={this.state.projectIdentifier}\n                description={this.state.description}\n                startDate={this.state.startDate}\n                endDate={this.state.endDate}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    errors: state.errors,\n    project: state.project.project\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Proptypes from \"prop-types\";\nimport { deleteProjectTask } from \"../../../actions/index\";\n\nclass ProjectTask extends Component {\n  onDeleteProjectTaskClick = (backlogId, ptId) => {\n    this.props.deleteProjectTask(backlogId, ptId);\n  };\n\n  render() {\n    const { projectTask } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (projectTask.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    } else if (projectTask.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    } else {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {projectTask.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{projectTask.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {projectTask.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${projectTask.projectIdentifier}/${\n              projectTask.projectSequence\n            }`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={() =>\n              this.onDeleteProjectTaskClick(\n                `${projectTask.projectIdentifier}`,\n                `${projectTask.projectSequence}`\n              )\n            }\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: Proptypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\nexport const addProjectTask = (\n  backlogId,\n  projectTask,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlogId}`, projectTask);\n    history.push(`/projectBoard/${backlogId}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlogId => async dispatch => {\n  try {\n    const response = await axios.get(`/api/backlog/${backlogId}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (backlogId, ptId, history) => async dispatch => {\n  try {\n    const response = await axios.get(`/api/backlog/${backlogId}/${ptId}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: response.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlogId,\n  ptId,\n  projectTask,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlogId}/${ptId}`, projectTask);\n    history.push(`/projectBoard/${backlogId}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlogId, ptId) => async dispatch => {\n  if (window.confirm(`Are you sure you want to delete project task ${ptId}?`)) {\n    await axios.delete(`/api/backlog/${backlogId}/${ptId}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: ptId\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { projectTasks } = this.props;\n\n    const tasks = projectTasks.map(projectTask => (\n      <ProjectTask key={projectTask.id} projectTask={projectTask} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      let status = tasks[i].props.projectTask.status;\n      if (status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      } else if (status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      } else {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  // constructor\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { projectTasks } = this.props.backlog;\n    const { errors } = this.props;\n\n    const getBoardContent = () => {\n      if (projectTasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog projectTasks={projectTasks} />;\n      }\n    };\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fa fa-plus-circle\">Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {getBoardContent()}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\n\nimport classnames from \"classnames\";\nimport Date from \"../../Project/Date\";\n\nclass ProjectTaskForm extends Component {\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.props.onSubmit}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className={classnames(\"form-control form-control-lg\", {\n                \"is-invalid\": this.props.errors.summary\n              })}\n              name=\"summary\"\n              placeholder=\"Project Task summary\"\n              value={this.props.summary}\n              onChange={this.props.onChange}\n            />\n            {this.props.errors.summary && (\n              <div className=\"invalid-feedback\">\n                {this.props.errors.summary}\n              </div>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <textarea\n              className=\"form-control form-control-lg\"\n              placeholder=\"Acceptance Criteria\"\n              name=\"acceptanceCriteria\"\n              value={this.props.acceptanceCriteria}\n              onChange={this.props.onChange}\n            />\n          </div>\n          <Date\n            title=\"Due Date\"\n            name=\"dueDate\"\n            value={this.props.dueDate || \"\"}\n            onChange={this.props.onChange}\n          />\n          <div className=\"form-group\">\n            <select\n              className=\"form-control form-control-lg\"\n              name=\"priority\"\n              value={this.props.priority}\n              onChange={this.props.onChange}\n            >\n              <option value={0}>Select Priority</option>\n              <option value={1}>High</option>\n              <option value={2}>Medium</option>\n              <option value={3}>Low</option>\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <select\n              className=\"form-control form-control-lg\"\n              name=\"status\"\n              value={this.props.status}\n              onChange={this.props.onChange}\n            >\n              <option value=\"\">Select Status</option>\n              <option value=\"TO_DO\">TO DO</option>\n              <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n              <option value=\"DONE\">DONE</option>\n            </select>\n          </div>\n\n          <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ProjectTaskForm;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addProjectTask } from \"../../../actions/index\";\nimport PropTypes from \"prop-types\";\n\nimport ProjectTaskForm from \"./ProjectTaskForm\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id\n    };\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const newProjectTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newProjectTask,\n      this.props.history\n    );\n  };\n\n  render() {\n    const { id } = this.props.match.params;\n    return (\n      <div>\n        <div className=\"add-PBI\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                  Back to Project Board\n                </Link>\n                <h4 className=\"display-4 text-center\">Add Project Task</h4>\n                <p className=\"lead text-center\">Project Name + Project Code</p>\n\n                <ProjectTaskForm\n                  onChange={this.onChange}\n                  onSubmit={this.onSubmit}\n                  errors={this.props.errors}\n                  summary={this.state.summary}\n                  acceptanceCriteria={this.state.acceptanceCriteria}\n                  status={this.state.status}\n                  priority={this.state.priority}\n                  dueDate={this.state.dueDate}\n                  projectIdentifier={this.state.projectIdentifier}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addProjectTask }\n)(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateProjectTask, getProjectTask } from \"../../../actions/index\";\nimport PropTypes from \"prop-types\";\n\nimport ProjectTaskForm from \"./ProjectTaskForm\";\n\nclass UpdateProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: null,\n      projectIdentifier: \"\",\n      createAt: \"\"\n    };\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const updatedProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      createAt: this.state.createAt\n    };\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      updatedProjectTask,\n      this.props.history\n    );\n  };\n\n  componentDidMount() {\n    const { backlogId, ptId } = this.props.match.params;\n    this.props.getProjectTask(backlogId, ptId, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      createAt\n    } = nextProps.projectTask;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      createAt\n    });\n  }\n\n  render() {\n    const { backlogId } = this.props.match.params;\n    return (\n      <div>\n        <div className=\"add-PBI\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <Link\n                  to={`/projectBoard/${backlogId}`}\n                  className=\"btn btn-light\"\n                >\n                  Back to Project Board\n                </Link>\n                <h4 className=\"display-4 text-center\">Update Project Task</h4>\n                <p className=\"lead text-center\">\n                  Project Name: {this.state.projectIdentifier} Project Task ID:{\" \"}\n                  {this.state.projectSequence}\n                </p>\n\n                <ProjectTaskForm\n                  onChange={this.onChange}\n                  onSubmit={this.onSubmit}\n                  errors={this.props.errors}\n                  summary={this.state.summary}\n                  acceptanceCriteria={this.state.acceptanceCriteria}\n                  status={this.state.status}\n                  priority={this.state.priority}\n                  dueDate={this.state.dueDate}\n                  projectIdentifier={this.state.projectIdentifier}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  projectTask: state.backlog.projectTask,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  projectTasks: [],\n  projectTask: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        projectTasks: action.payload\n      };\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        projectTask: action.payload\n      };\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        projectTasks: state.projectTasks.filter(\n          projectTask => projectTask.projectSequence !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  user: {},\n  validToken: false\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    reducers,\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else {\n  store = createStore(\n    reducers,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">Personal Kanban Tool</h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n    this.props.createNewUser(newUser, this.props.history);\n  };\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": this.props.errors.fullName\n                    })}\n                    placeholder=\"Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {this.props.errors.fullName && (\n                    <div className=\"invalid-feedback\">\n                      {this.props.errors.fullName}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": this.props.errors.username\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {this.props.errors.fullName && (\n                    <div className=\"invalid-feedback\">\n                      {this.props.errors.username}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": this.props.errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    onChange={this.onChange}\n                    value={this.state.value}\n                  />\n                  {this.props.errors.fullName && (\n                    <div className=\"invalid-feedback\">\n                      {this.props.errors.password}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": this.props.errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    onChange={this.onChange}\n                    value={this.state.confirmPassword}\n                  />\n                  {this.props.errors.fullName && (\n                    <div className=\"invalid-feedback\">\n                      {this.props.errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const loginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(loginRequest);\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    const { errors } = this.props;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({ security: state.security });\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\n\nimport \"./App.css\";\nimport Dashboard from \"./Dashboard\";\nimport Header from \"./Layout/Header\";\nimport AddProject from \"./Project/AddProject\";\nimport UpdateProject from \"./Project/UpdateProject\";\nimport ProjectBoard from \"./ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport store from \"../store\";\nimport Landing from \"./Layout/Landing\";\nimport Register from \"./UserManagement/Register\";\nimport Login from \"./UserManagement/Login\";\nimport { SET_CURRENT_USER } from \"../actions/types\";\nimport { logout } from \"../actions/securityActions\";\nimport SecuredRoute from \"../securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decodedJWTToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decodedJWTToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decodedJWTToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n            <Header />\n            {\n              // Public Routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            {\n              // Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlogId/:ptId\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}